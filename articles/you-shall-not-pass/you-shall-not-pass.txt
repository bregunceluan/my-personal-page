---
id: 4
name: "you-shall-not-pass"
title: "Um sistema de monitoramento em tempo real de servidores a ataques de for√ßa bruta."
preview: "Nesse artigo explico como a leitura de um post no Reddit me instigou a investigar e notar ataques hackers que minha VPS estava sofrendo, e como criei um sistema para persistir e exibir os dados desses ataques."
date: "2025-07-17"
tags: ["Linux", "C#", "Cybersecurity", "Scripting"]
---

Nesse artigo explico como a leitura de um post no Reddit me instigou a investigar e notar ataques hackers que minha VPS estava sofrendo, e como criei um sistema para persistir e exibir os dados desses ataques.

Voc√™ com certeza j√° escutou a m√°xima ‚ÄúA internet √© um local perigoso‚Äù, e de fato √©. Por√©m, no uso di√°rio e com a aus√™ncia de amea√ßas reais aparentes, √© f√°cil esquecermos desse fato.

O perigo est√° √† espreita a todo momento. A cada segundo, softwares e computadores do mundo inteiro sofrem ataques hackers das mais diversas maneiras poss√≠veis. Engenharia social, phishing, ransomware e spywares s√£o apenas alguns exemplos de ataques amplamente conhecidos hoje em dia. Al√©m disso, novas amea√ßas e vulnerabilidades surgem com o advento e a populariza√ß√£o das IAs.

Ciente desses fatos e guiado pela curiosidade, resolvi aprofundar um pouco mais nesse tema e implementar um sistema de seguran√ßa para minha m√°quina virtual (VPS).

-----

## VPS

Obter uma m√°quina virtual √© uma maneira divertida de colocar seus projetos online. Voc√™ pode contratar esse servi√ßo de um provedor e ter todos os seus projetos rodando em um mesmo local, de maneira segura.

Atrav√©s de uma assinatura mensal ou da contrata√ß√£o de um plano anual, voc√™ pode ter uma m√°quina inteira para si. No entanto, ao contr√°rio de servi√ßos de nuvem especializados como AWS S3, Google Firebase, Azure Blob Storage, Vercel e outros, na VPS voc√™ precisa se preocupar desde a seguran√ßa at√© como servir cada aplica√ß√£o, por exemplo.

√â um convite ao aprendizado.

-----

## Ataques Hackers

Eu estava lendo alguns t√≥picos no Reddit quando me deparei com usu√°rios relatando que, ao inspecionar os arquivos de log de autentica√ß√£o SSH de suas m√°quinas virtuais, eles se surpreenderam com o n√∫mero de tentativas de login que n√£o reconheciam.

Isso logo despertou minha curiosidade: ‚ÄúSer√° que isso est√° acontecendo tamb√©m na minha m√°quina virtual?‚Äù

No Linux, na distro Ubuntu, cada evento relacionado √† autentica√ß√£o, como tentativas de login bem ou mal-sucedidas, altera√ß√µes de privil√©gio de usu√°rio e outros mecanismos de autentica√ß√£o, ficam salvos no arquivo */var/log/auth.log*.

A resposta para minha pergunta viria com uma solu√ß√£o bem simples:

  * Criar um bot no Telegram.
  * Um script que l√™ o arquivo de logs em */var/log/auth.log*.
  * Procura pelo termo ‚ÄúPassword Failed‚Äù.
  * Envia o log para o Telegram usando a API do bot.

Tudo isso rodando em cima do cronjob do Linux.

Bem simples, uma hora de trabalho e estava tudo pronto. Mal sabia eu que meu celular come√ßaria a n√£o parar de receber notifica√ß√µes.

O cronjob rodava a cada 5 minutos, e a cada mesmo per√≠odo meu celular recebia notifica√ß√µes como:

```csharp
üö® [VPS] SSH ALERTA: 2025-07-11T14:30:28.624137 00:00 srv123456 sshd[1234567]:
Failed password for invalid user test from xxx.xxx.xxx. port 50650 ssh2
```

Essa VPS serve apenas meu site pessoal, portanto n√£o possui um tr√°fego de dados consider√°vel. Mas isso n√£o importava, ela tamb√©m estava recebendo ataques de for√ßa bruta (brute force attack), onde hackers tentavam diversas senhas para logar na m√°quina. E n√£o apenas com senhas diferentes, usu√°rios comuns tamb√©m eram explorados, como postgres, user, admin, ftpuser e outros.

Devo admitir, os miser√°veis s√£o insistentes e criativos.

-----

## Melhorando a Abordagem

N√£o dava para continuar recebendo centenas de notifica√ß√µes. Resolvi ent√£o mudar a abordagem para:

O atacante faz 3 tentativas falhas de acesso √† VPS ‚Üí Banir o IP do atacante ‚Üí Persistir seu IP em um banco de dados juntamente com a cidade, estado e pa√≠s do IP.

Para me ajudar nessa miss√£o, utilizei duas ferramentas: UFW e Fail2ban.

O UFW (**Uncomplicated Firewall**) permite criar uma prote√ß√£o para as portas da m√°quina virtual, impedindo que atacantes tenham acesso a ela.

Com o comando abaixo √© poss√≠vel bloquear todas as conex√µes que entram e permitir todas as conex√µes que saem:

```csharp
sudo ufw default deny incoming
sudo ufw default allow outgoing
```

Caso seja necess√°rio permitir alguma porta espec√≠fica, basta um `ufw allow [porta]`.

Rodando o nmap para verificar as portas que est√£o acess√≠veis:
> ![FOTO/IMAGE DO PROMPT](https://raw.githubusercontent.com/bregunceluan/my-personal-page/refs/heads/main/articles/you-shall-not-pass/nmap.jpg)

Feito, agora todas as portas est√£o fechadas. Menos um vetor de ataque.

O **Fail2ban** √© um software de c√≥digo aberto que oferece diversas fun√ß√µes para prote√ß√£o de servidores contra ataques de for√ßa bruta. Ele escaneia arquivos de logs como o */var/log/auth.log* e bane IPs que est√£o fazendo tentativas falhas de conex√£o. Ele faz isso atualizando em tempo real as regras do firewall do Linux.

Com esse software √© poss√≠vel adicionar regras para que, a cada X n√∫meros de tentativas falhas, o IP do usu√°rio seja banido atrav√©s da adi√ß√£o de uma nova regra ao Iptables. Algumas outras customiza√ß√µes s√£o poss√≠veis com o Fail2ban, como a√ß√µes desencadeadas pr√© e p√≥s-banimento de um IP.

Para essa aplica√ß√£o, fiz uso do **Actionban**, uma a√ß√£o que o Fail2ban aciona ao banir um IP. Criei ent√£o um script simples que faz uma requisi√ß√£o para enviar o IP banido para um endpoint da API do YouShallNotPass.

-----

## You Shall Not Pass

Com esses v√°rios IPs tentando acessar a VPS, surgiu-me a ideia de criar uma p√°gina que apresenta em tempo real todos os IPs banidos e suas localiza√ß√µes.

Atrav√©s de servi√ßos como **IP2Location** e **ipinfo.io**, √© poss√≠vel obter dados da localiza√ß√£o dos IPs atacantes. A localiza√ß√£o do IP n√£o √© do usu√°rio final, e sim do provedor de internet.

O **You Shall Not Pass** √© uma aplica√ß√£o que exp√µe endpoints, em sua maioria internos, para persistir os dados dos IPs atacantes. Dessa forma, √© poss√≠vel disponibilizar esses dados estruturados para o frontend dessa aplica√ß√£o.

Caso tenha interesse em ver a aplica√ß√£o em tempo real, [clique aqui](https://youshallnotpass.devluan.com/).

> ![FOTO/IMAGE DO PROMPT](https://raw.githubusercontent.com/bregunceluan/my-personal-page/refs/heads/main/articles/you-shall-not-pass/youshallnotpass_api.jpg)

-----

## Conclus√£o

A jornada de proteger minha VPS contra ataques cibern√©ticos, que come√ßou com a simples leitura de logs e o alerta inicial de um bot no Telegram, revelou a persist√™ncia e a criatividade dos atacantes. Essa experi√™ncia n√£o apenas refor√ßou a m√°xima de que "a internet √© um local perigoso", mas tamb√©m demonstrou a import√¢ncia de se manter vigilante e proativo na seguran√ßa de qualquer sistema online. A implementa√ß√£o de ferramentas como **UFW** e **Fail2ban**, culminando na cria√ß√£o do **You Shall Not Pass**, transformou um problema em uma oportunidade de aprendizado e desenvolvimento de uma solu√ß√£o robusta. Proteger sua presen√ßa online n√£o √© um evento √∫nico, mas um processo cont√≠nuo de adapta√ß√£o e aprimoramento. A seguran√ßa digital exige curiosidade, experimenta√ß√£o e a disposi√ß√£o de ir al√©m do b√°sico para garantir a integridade dos seus dados e sistemas.